// User function template for C++

class Solution{
    public:
    
    void solve(vector<vector<int>> &m, int n,vector<string>&ans,int i,int j,string path,vector<vector<int>> &vis){
        if(i==n-1 && j==n-1){
            ans.push_back(path);
            return;
        }
        //LEFT
        if(j-1>=0 && m[i][j-1]==1 &&!vis[i][j-1]){
            vis[i][j]=1;
            solve(m,n,ans,i,j-1,path+'L',vis);
            vis[i][j]=0;
        }
        
        //RIGHT
        if(j+1<n && m[i][j+1]==1 && !vis[i][j+1]){
            vis[i][j]=1;
            solve(m,n,ans,i,j+1,path+'R',vis);
            vis[i][j]=0;
        }
        
        //UP
        if(i-1>=0 && m[i-1][j]==1 && !vis[i-1][j]){
            vis[i][j]=1;
            solve(m,n,ans,i-1,j,path+'U',vis);
            vis[i][j]=0;
        }
        
        //DOWN
        if(i+1<n && m[i+1][j]==1 && !vis[i+1][j]){
            vis[i][j]=1;
            solve(m,n,ans,i+1,j,path+'D',vis);
            vis[i][j]=0;
        }
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        vector<vector<int>> vis(n,vector<int>(n,0));
        if(m[0][0]==1)solve(m,n,ans,0,0,"",vis);
        return ans;
    }
};

    
