class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        int n=grid.size();
        queue<pair<int,int>> q;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({i,j});
                };
            }
        }
        if(q.empty() || q.size()==n*n)return -1;
        
        int ans=-1;
        int dx[]={1,-1,0,0};
        int dy[]={0,0,1,-1};
        while(!q.empty()){
            int sz=q.size();
            
            while(sz--){
                int x=q.front().first;
                int y=q.front().second;
                q.pop();
                for(int i=0;i<4;i++){
                    int newx=x+dx[i];
                    int newy=y+dy[i];
                    if(newx>=0 && newx<n && newy>=0 && newy<n && grid[newx][newy]==0){
                        grid[newx][newy]=1;
                        q.push({newx,newy});
                    }
                }
               
            }
             ans++;
        }
        return ans;
    }
};
