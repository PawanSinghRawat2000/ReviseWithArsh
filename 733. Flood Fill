class Solution {
public:

    void dfs(int i,int j,vector<vector<int>>& image,int n,int m,vector<vector<int>>&vis,int oldColor,int newColor){
        if(i<0 || i>=n || j<0 || j>=m || vis[i][j] || image[i][j]!=oldColor)return;
        vis[i][j]=1;
        image[i][j]=newColor;
        dfs(i+1,j,image,n,m,vis,oldColor,newColor);
        dfs(i-1,j,image,n,m,vis,oldColor,newColor);
        dfs(i,j+1,image,n,m,vis,oldColor,newColor);
        dfs(i,j-1,image,n,m,vis,oldColor,newColor);
    }

    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n=image.size(),m=image[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        int oldColor=image[sr][sc];
        dfs(sr,sc,image,n,m,vis,oldColor,color);
        return image;
    }
};
