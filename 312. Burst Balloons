//MCM
class Solution {
public:

    int solve(int i,int j,vector<int>&nums){
        if(i>=j)return 0;
        int ans=INT_MIN;
        for(int k=i;k<j;k++){
            int tempans=solve(i,k,nums)+solve(k+1,j,nums)+(nums[i-1]*nums[k]*nums[j]);
            ans=max(ans,tempans);
        }
        return ans;
    }

    int maxCoins(vector<int>& nums) {
        nums.push_back(1);
        nums.insert(nums.begin(),1);
        return solve(1,nums.size()-1,nums);
    }
};

----------------------------------------------------------------------------------
class Solution {
public:

    int solve(int i,int j,vector<int>&nums, vector<vector<int>>&dp){
        if(i>=j)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        int ans=INT_MIN;
        for(int k=i;k<j;k++){
            int tempans=solve(i,k,nums,dp)+solve(k+1,j,nums,dp)+(nums[i-1]*nums[k]*nums[j]);
            ans=max(ans,tempans);
        }
        return dp[i][j]= ans;
    }

    int maxCoins(vector<int>& nums) {
        nums.push_back(1);
        nums.insert(nums.begin(),1);
        int n=nums.size();
        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        return solve(1,n-1,nums,dp);
    }
};
