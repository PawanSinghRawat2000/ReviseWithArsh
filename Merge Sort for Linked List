class Solution{
  public:
    //Function to sort the given linked list using Merge Sort.
    
    Node* getMid(Node* head){
        Node* slow=head;
        Node* fast=head->next;
        while(fast && fast->next){
            fast=fast->next->next;
            slow=slow->next;
        }
        return slow;
    }
    Node* merge(Node* left,Node* right){
        if(left==NULL)return right;
        if(right==NULL)return left;
        Node* dummy=new Node(-1);
        Node* ans=dummy;
        while(left && right){
            if(left->data<=right->data){
                dummy->next=left;
                dummy=left;
                left=left->next;
            }else{
                dummy->next=right;
                dummy=right;
                right=right->next;
            }
        }
        while(left){
            dummy->next=left;
            dummy=left;
            left=left->next;
        }
        while(right){
            dummy->next=right;
            dummy=right;
            right=right->next;
        }
        return ans->next;
    }
    
    Node* mergeSort(Node* head) {
        // your code here
            if(head == NULL || head->next == NULL)
        {
            return head;
        }
        Node* left = head;
        Node* mid = getMid(head);
        Node* right = mid->next;
        mid->next = NULL;
        
        left = mergeSort(left);
        right = mergeSort(right);
        
        Node* result = merge(left,right);
        return result;
    }
};
