//RECURSIVE
class Solution {
public:

    void solve(int n, int k,vector<vector<int>>&ans,vector<int>&temp){
        if(k==0){
            ans.push_back(temp);
            return;
        }
        if(n<=0)return;
        temp.push_back(n);
        solve(n-1,k-1,ans,temp);
        temp.pop_back();
        solve(n-1,k,ans,temp);
    }

    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> ans;
        vector<int>temp;
        solve(n,k,ans,temp);
        return ans;
    }
};

//SIMILAR USING FOR
class Solution {
public:

    void solve(int ind,int n, int k,vector<vector<int>>&ans,vector<int>&temp){
        if(k==0){
            ans.push_back(temp);
            return;
        }
        for(int i=ind;i<=n;i++){
            temp.push_back(i);
            solve(i+1,n,k-1,ans,temp);
            temp.pop_back();
        }
    
    }

    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> ans;
        vector<int>temp;
        solve(1,n,k,ans,temp);
        return ans;
    }
};
