class Solution{
public:
    // Function to determine if graph can be coloured with at most M colours such
    // that no two adjacent vertices of graph are coloured with same colour.
    
    bool isSafe(bool graph[101][101],int color[],int col,int node,int n){
        for(int k=0;k<n;k++){
            if(k!=node && graph[k][node]==1 && color[k]==col)return false;
            
        }
        return true;
    }
    
    bool solve(bool graph[101][101],int node,int m,int n,int color[]){
        if(node==n)return true;
        
        for(int i=1;i<=m;i++){
            if(isSafe(graph,color,i,node,n)){
                color[node]=i;
                if(solve(graph,node+1,m,n,color))return true;
                else color[node]=0;
            }
        }
        return false;
    }
    
    bool graphColoring(bool graph[101][101], int m, int n) {
        // your code here
        int color[n]={0};
        if(solve(graph,0,m,n,color))return true;
        return false;
    }
};
