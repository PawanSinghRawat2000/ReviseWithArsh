class Solution {
  public:
    // Function to find the number of islands.
    
    void dfs(int i,int j,vector<vector<char>>& grid,int m,int n,vector<vector<int>>&vis){
        if(i>=m || i<0 || j<0 || j>=n){
            return;
        }
        if(grid[i][j]=='0')return;
        
        if(vis[i][j]==0){
            vis[i][j]=1;
        dfs(i+1,j,grid,m,n,vis);
        dfs(i-1,j,grid,m,n,vis);
        
        dfs(i-1,j+1,grid,m,n,vis);
        dfs(i+1,j-1,grid,m,n,vis);
        
        dfs(i,j+1,grid,m,n,vis);
        dfs(i,j-1,grid,m,n,vis);
       
        dfs(i+1,j+1,grid,m,n,vis);
        dfs(i-1,j-1,grid,m,n,vis);
        }
        return;
    }
    
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int m=grid.size(),n=grid[0].size();
        vector<vector<int>> vis(m,vector<int>(n,0));
        int count=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(vis[i][j]==0 && grid[i][j]=='1'){
                    count++;
                    dfs(i,j,grid,m,n,vis);
                    
                }
            }
        }
        return count;
    }
};
