class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        int ans=0;
        while(!q.empty()){
            int sz=q.size();
            int minm=q.front().second;
            int first,last;
            for(int i=0;i<sz;i++){
                TreeNode* node=q.front().first;
                int curr_id=q.front().second-minm;
                q.pop();
                if(i==0)first=curr_id;
                if(i==sz-1)last=curr_id;

                if(node->left)q.push({node->left,2*curr_id});
                if(node->right)q.push({node->right,2*curr_id+1});
            }
            ans=max(ans,last-first+1);
        }
        return ans;
    }
};
