class Solution 
{
    public:
    //Function to find distance of nearest 1 in the grid for each cell.
	vector<vector<int>>nearest(vector<vector<int>>grid)
	{
	    // Code here
	    int n=grid.size();
	    int m=grid[0].size();
	    vector<vector<int>> ans(n,vector<int>(m,INT_MAX));
	    queue<pair<int,int>> q;
	    
	    for(int i=0;i<n;i++){
	        for(int j=0;j<m;j++){
	            if(grid[i][j]==1){
	                ans[i][j]=0;
	                q.push({i,j});
	            }
	        }
	    }
	    
	    int dx[4]={1,-1,0,0};
	    int dy[4]={0,0,1,-1};
	    
	    while(!q.empty()){
	        int x=q.front().first;
	        int y=q.front().second;
	        q.pop();
	        
	        //UP
	        for(int i=0;i<4;i++){
	            int nx=x+dx[i],ny=y+dy[i];
	            if(nx<0 || nx>=n || ny<0 || ny>=m)continue;
	            if(1+ans[x][y]<ans[nx][ny]){
	                ans[nx][ny]=1+ans[x][y];
	                q.push({nx,ny});
	            }
	            
	        }
	    }
	    return ans;
	}
};
