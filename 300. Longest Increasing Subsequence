class Solution {
public:

    int solve(vector<int>& nums,int ind,int n,int prev){
        if(ind==n)return 0;
        int notTake=solve(nums,ind+1,n,prev);
        int take=0;
        if(prev==-1 || nums[ind]>nums[prev])take=1+solve(nums,ind+1,n,ind);
        return max(take,notTake);
    }

    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        return solve(nums,0,n,-1);
    }
};

--------------------------------------------------------------------------------------------

class Solution {
public:

    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<int>dp(n,1);
        int ans=1;
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[i]>nums[j])dp[i]=max(1+dp[j],dp[i]);
                
            }
            ans=max(ans,dp[i]);
            
        }
        return ans;
    }
};
