class Solution {
public:
    int partition(vector<int>&arr,int left,int right){
        int pivot=arr[left];
        int l=left+1;
        int r=right;
        while(l<=r){
            if(arr[l]<pivot && arr[r]>pivot){
                swap(arr[l],arr[r]);
                l++;r--;
            }
            if(arr[l]>=pivot)l++;
            if(arr[r]<=pivot)r--;
            
        }
        swap(arr[left],arr[r]);
        return r;
    }


    int findKthLargest(vector<int>& arr, int k) {
        int left=0,right=arr.size()-1;
        int ans=-1;
        while(1){
            int idx=partition(arr,left,right);
            if(idx==k-1){
                ans=arr[k-1];
                break;
            }
            if(idx<k-1)left=idx+1;
            else right=idx-1;
        }
        return ans;
    }
};
