class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int>mp;
        for(int i=0;i<t.length();i++){
            mp[t[i]]++;
        }
        int count=mp.size();

        int i=0,j=0,start=-1;
        int minLength=INT_MAX;
        while(j<s.length()){
            if(mp.find(s[j])!=mp.end()){
                mp[s[j]]--;
                if(mp[s[j]]==0)count--;
            }

            if(count==0){
                while(count==0){
                    if(minLength>j-i+1){
                        minLength=j-i+1;
                        start=i;
                    }
                    if(mp.find(s[i])!=mp.end()){
                        mp[s[i]]++;
                        if(mp[s[i]]>0)count++;
                       
                    }
                    i++;
                    
                }
            }
            j++;
        }
        return minLength==INT_MAX?"":s.substr(start,minLength);
    }
};
