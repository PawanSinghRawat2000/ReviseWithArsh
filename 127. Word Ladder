class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> dict(wordList.begin(),wordList.end());
        queue<string> q;
        q.push(beginWord);
        int ans=1;
        while(!q.empty()){
            int sz=q.size();
            while(sz--){
                string word=q.front();
                q.pop();
                if(word==endWord)return ans;
                dict.erase(word);
                for(int i=0;i<word.size();i++){
                    char ch =word[i];
                    for(int k=0;k<26;k++){
                        word[i]='a'+k;
                        if(dict.find(word)!=dict.end())q.push(word);
                    }
                    word[i]=ch;
                }
            }
            ans++;
        }
        return 0;
    }
};
