class Solution {
  public:
  
  bool isPalindrome(string s){
      int i=0,j=s.length()-1;
      while(i<=j){
          if(s[i]!=s[j])return false;
          i++;j--;
      }
      return true;
  }
  
    void solve(int ind,string s,vector<vector<string>>&ans,vector<string>&temp){
        if(ind==s.length()){
            ans.push_back(temp);
            return;
        }
        string t;
        for(int i=ind;i<s.length();i++){
            t+=s[i];
            if(isPalindrome(t)){
                temp.push_back(t);
                solve(i+1,s,ans,temp);
                temp.pop_back();
            }
        }
    }
  
    vector<vector<string>> allPalindromicPerms(string S) {
        // code here
        int i=0,j=S.length()-1;
        vector<vector<string>> ans;
        vector<string>temp;
        solve(i,S,ans,temp);
        return ans;
    }
};
