class Solution {
public:
    int mod=1e9+7;
    int dx[8]={2,2,-2,-2,1,1,-1,-1};
    int dy[8]={1,-1,1,-1,2,-2,2,-2};

    int solve(int x,int y,int n,vector<vector<vector<int>>>& dp){

        if(n==0)return 1;
        if(dp[x][y][n]!=-1)return dp[x][y][n];
        long long ans=0;
        for(int i=0;i<8;i++){
            int newx=x+dx[i];
            int newy=y+dy[i];
            if(newx>=0 && newy>=0 && newx<3 && newy<3)ans+=solve(newx,newy,n-1,dp)%mod;
            else if(newx==3 && newy==1)ans+=solve(newx,newy,n-1,dp)%mod;
        }
        return dp[x][y][n]= ans%mod;
    }

    int knightDialer(int n) {
        long long ans=0;
        vector<vector<vector<int>>> dp(4,vector<vector<int>>(3,vector<int>(n+1,-1)));
        for(int i=0;i<=3;i++){
            for(int j=0;j<3;j++){
                if(i==3 && j!=1)continue;
                ans+=solve(i,j,n-1,dp)%mod;
            }
        }
        return ans%mod;
    }
};
