class Solution {
public:

    int countSmallerThanEqualTo(vector<int>&arr,int mid){
        int low=0,high=arr.size()-1;
        while(low<=high){
            int md=(low+high)/2;
            if(arr[md]<=mid)low=md+1;
            else high=md-1;
        }
        return low;
    }

    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int n = matrix.size();
        int low =INT_MAX, high = INT_MIN;
        for(int i =0;i<n;i++) low = min(low, matrix[i][0]);
        for(int i =0;i<n;i++) high = max(high, matrix[i][n-1]);
        
        
        while(low<=high)
        {
            int mid = (low+high)/2;
            int cnt =0;
            for(int i=0;i<n;i++){
                cnt+=countSmallerThanEqualTo(matrix[i],mid);
            }
            
            if(cnt<k) low=mid+1;
            else high=mid-1;
        }
        
        return low;
    }
};


